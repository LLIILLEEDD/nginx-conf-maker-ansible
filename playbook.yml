---
- name: nginx conf maker
  hosts: localhost
  become: yes

  vars_files:
    - vars/vars_path.yml
    - params/params.yml

  tasks:
    - name: Install nginx dnf
      dnf:
        name: nginx
        state: present
        update_cache: true

    - name: Enable nginx
      service:
        name: nginx.service
        enabled: true
        state: started

    - name: Validate required paths
      block:
        - name: Check path {{OUTPUT_DIR}}
          stat:
            path: "{{OUTPUT_DIR}}"
          register: OUTPUT_DIR_status

        - name: Check path {{SITE_DIR}}
          stat:
            path: "{{SITE_DIR}}"
          register: SITE_DIR_status

        - name: Check path {{TEMPLATE}}
          stat:
            path: "{{TEMPLATE}}"
          register: TEMPLATE_status

        - name: Check path {{CONFIG}}
          stat:
            path: "{{CONFIG}}"
          register: CONFIG_status

      rescue:
        - name: Fail if any path is missing
          fail:
            msg: >-
              Required path does not exist: 
              {% if not OUTPUT_DIR_status.stat.exists %}{{OUTPUT_DIR}}
              {% elif not SITE_DIR_status.stat.exists %}{{SITE_DIR}}
              {% elif not TEMPLATE_status.stat.exists %}{{TEMPLATE}}
              {% else %}{{CONFIG}}{% endif %}

    - name: Create nginx-conf
      template:
        dest: "{{OUTPUT_DIR}}/{{item.name}}.conf"
        src: "{{TEMPLATE}}"
        mode: 0774
      loop: "{{sites}}"
      vars:
        listen: "{{ item.listen }}"
        server_name: "{{ item.server_name }}"
        root: "{{ item.root }}"
      register: nginx_config_changed
      notify:
        - Test nginx config
        - Show nginx config errors
        - Reload nginx

    - name: Create folder in {{SITE_DIR}}
      loop: "{{sites}}"
      loop_control:
        label: "{{ item.name }}"
      file:
        path: "{{SITE_DIR}}/{{item.server_name}}"
        state: directory
        mode: "0774"

  handlers:
    - name: Test nginx config
      command: nginx -t
      changed_when: false
      register: nginx_test
      ignore_errors: yes

    - name: Show nginx config errors
      debug:
        var: nginx_test.stderr
      when: nginx_test.rc != 0

    - name: Reload nginx
      systemd:
        name: nginx
        state: reloaded
      when: nginx_test.rc == 0